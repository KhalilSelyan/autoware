---
- name: Install qt5ct
  ansible.builtin.apt:
    name: qt5ct
    state: present
  become: true

- name: Install rsync
  ansible.builtin.package:
    name: rsync
    state: present
  become: true

- name: Set variable qt5ct_config_dir
  ansible.builtin.set_fact:
    qt5ct_config_dir: "{{ ansible_env.HOME }}/.config/qt5ct"

- name: Ensure qt5ct_config_dir exists
  ansible.builtin.file:
    path: "{{ qt5ct_config_dir }}"
    state: directory

- name: Print the role_path
  debug:
    msg: "The role_path is: {{ role_path }}"

- name: Assign a string to a variable
  ansible.builtin.set_fact:
    icons_path: "{{ qt5ct_config_dir }}/autoware-rviz-icons"

- name: Remove autoware-rviz-icons folder if it exists
  ansible.builtin.file:
    path: "{{ icons_path }}"
    state: absent

# The autoware.qss file will refer to these icons
- name: Copy autoware-rviz-icons to the qt5ct config directory
  ansible.builtin.command:
    cmd: "rsync -avz {{ role_path }}/files/autoware-rviz-icons/ {{ icons_path }}/"

- name: Fix the paths in the qss file
  ansible.builtin.replace:
    path: "{{ role_path }}/files/autoware.qss"
    regexp: "/icons_path/"
    replace: "{{ icons_path }}/"

- name: Ensure qt5ct_config_dir/qss exists
  ansible.builtin.file:
    path: "{{ qt5ct_config_dir }}/qss"
    state: directory

# The qt5ct.conf file will refer to the autoware.qss file
- name: Copy autoware.qss to the qt5ct qss directory
  ansible.builtin.copy:
    src: "{{ role_path }}/files/autoware.qss"
    dest: "{{ qt5ct_config_dir }}/qss/autoware.qss"
    force: yes
    backup: yes

- name: Fix the paths in the config file
  ansible.builtin.replace:
    path: "{{ role_path }}/files/qt5ct.conf"
    regexp: "autoware_stylesheet_path"
    replace: "{{ qt5ct_config_dir }}/qss/autoware.qss"

- name: Copy qt5ct.conf to the config directory
  ansible.builtin.copy:
    src: "{{ role_path }}/files/qt5ct.conf"
    dest: "{{ ansible_env.HOME }}/.config/qt5ct/qt5ct.conf"
    force: yes
    backup: yes
